[{"path":"https://dieghernan.github.io/resmush/articles/resmush.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Using resmush","text":"Compressing online jpg image:   Original picture (top) 178.7 Kb optimized picture (bottom) 45 Kb (Compression 74.8%) quality compression can adjusted case jpg files using parameter qlty. However, recommended keep value 90 get good image quality.   Low quality image due high compression rate. functions return invisibly data set summary process. next example shows compressing local file.","code":"library(resmush)  url <- paste0(   \"https://raw.githubusercontent.com/dieghernan/\",   \"resmush/main/img/jpg_example_original.jpg\" )  resmush_url(url, outfile = \"jpg_example_compress.jpg\") resmush_url(url,   outfile = \"jpg_example_compress_low.jpg\", qlty = 10,   verbose = TRUE ) #> ✔ Optimizing https://raw.githubusercontent.com/dieghernan/resmush/main/img/jpg_example_original.jpg: #> ℹ Effective compression ratio: 96.9% #> ℹ Current size: 5.6 Kb (was 178.7 Kb) #> ℹ Output: './jpg_example_compress_low.jpg' png_file <- system.file(\"extimg/example.png\", package = \"resmush\")  # For the example, copy to a temporary file tmp_png <- tempfile(fileext = \".png\") file.copy(png_file, tmp_png, overwrite = TRUE) #> [1] TRUE   summary <- resmush_file(tmp_png)  tibble::as_tibble(summary[, -c(1, 2)]) #> # A tibble: 1 × 4 #>   src_size dest_size compress_ratio notes #>   <chr>    <chr>     <chr>          <chr> #> 1 239.9 Kb 70.7 Kb   70.5%          OK ;)"},{"path":"https://dieghernan.github.io/resmush/articles/resmush.html","id":"other-alternatives","dir":"Articles","previous_headings":"","what":"Other alternatives","title":"Using resmush","text":"xfun::tinify() similar resmush_file() uses TinyPNG. API key required. xfun::optipng() compress local files OptiPNG (needs installed locally). tinieR package jmablog. R package provides full interface TinyPNG. optout package @coolbutuseless. Similar xfun::optipng() additionall options. Needs additional software installed locally. Imgbot: Automatic optimization files hosted GitHub repos.","code":""},{"path":"https://dieghernan.github.io/resmush/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego Hernangómez. Author, maintainer, copyright holder.","code":""},{"path":"https://dieghernan.github.io/resmush/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernangómez D (2024). resmush: Optimize Compress Image Files reSmush.. https://dieghernan.github.io/resmush/.","code":"@Manual{R-resmush,   title = {{resmush}: Optimize and Compress Image Files with {reSmush.it}},   author = {Diego Hernangómez},   year = {2024},   version = {0.0.1},   url = {https://dieghernan.github.io/resmush/},   abstract = {Compress local and online images using the reSmush.it API service .}, }"},{"path":[]},{"path":"https://dieghernan.github.io/resmush/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://dieghernan.github.io/resmush/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://dieghernan.github.io/resmush/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look R-CMD-check build status making changes. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://dieghernan.github.io/resmush/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://dieghernan.github.io/resmush/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://dieghernan.github.io/resmush/index.html","id":"resmush-","dir":"","previous_headings":"","what":"Optimize and Compress Image Files with reSmush.it","title":"Optimize and Compress Image Files with reSmush.it","text":"resmush R package allow users optimize compress images using reSmush.. reSmush.free API provides image optimization, implemented Wordpress, Drupal Magento. features reSmush.: Free optimization services, API key required. Optimize local online images. Image files supported: png, jpg/jpeg, gif, bmp, tiff, webp. Max image size: 5 Mb. PNGQuant: Strip unneeded chunks pngs, preserving full alpha transparency. JPEGOptim: Lossless optimization based optimizing Huffman tables. OptiPNG: png reducer used several online optimizers.","code":""},{"path":"https://dieghernan.github.io/resmush/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimize and Compress Image Files with reSmush.it","text":"can install development version resmush GitHub : Alternatively, can install resmush using r-universe:","code":"# install.packages(\"devtools\") devtools::install_github(\"dieghernan/resmush\") # Install resmush in R: install.packages(\"resmush\", repos = c(   \"https://dieghernan.r-universe.dev\",   \"https://cloud.r-project.org\" ))"},{"path":"https://dieghernan.github.io/resmush/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Optimize and Compress Image Files with reSmush.it","text":"Compressing online jpg image:   Original picture (top) 178.7 Kb optimized picture (bottom) 45 Kb (Compression 74.8%) quality compression can adjusted case jpg files using parameter qlty. However, recommended keep value 90 get good image quality. Low quality figure  Low quality image due high compression rate. functions return invisibly data set summary process. next example shows compressing local file.","code":"library(resmush)  url <- paste0(   \"https://raw.githubusercontent.com/dieghernan/\",   \"resmush/main/img/jpg_example_original.jpg\" )  resmush_url(url, outfile = \"man/figures/jpg_example_compress.jpg\") resmush_url(url,   outfile = \"man/figures/jpg_example_compress_low.jpg\", qlty = 10,   verbose = TRUE ) #> ✔ Optimizing https://raw.githubusercontent.com/dieghernan/resmush/main/img/jpg_example_original.jpg: #> ℹ Effective compression ratio: 96.9% #> ℹ Current size: 5.6 Kb (was 178.7 Kb) #> ℹ Output: 'man/figures/jpg_example_compress_low.jpg' png_file <- system.file(\"extimg/example.png\", package = \"resmush\")  # For the example, copy to a temporary file tmp_png <- tempfile(fileext = \".png\") file.copy(png_file, tmp_png, overwrite = TRUE) #> [1] TRUE   summary <- resmush_file(tmp_png)  tibble::as_tibble(summary[, -c(1, 2)]) #> # A tibble: 1 × 4 #>   src_size dest_size compress_ratio notes #>   <chr>    <chr>     <chr>          <chr> #> 1 239.9 Kb 70.7 Kb   70.5%          OK ;)"},{"path":"https://dieghernan.github.io/resmush/index.html","id":"other-alternatives","dir":"","previous_headings":"","what":"Other alternatives","title":"Optimize and Compress Image Files with reSmush.it","text":"xfun::tinify() similar resmush_file() uses TinyPNG. API key required. xfun::optipng() compress local files OptiPNG (needs installed locally). tinieR package jmablog. R package provides full interface TinyPNG. optout package @coolbutuseless. Similar xfun::optipng() additionall options. Needs additional software installed locally. Imgbot: Automatic optimization files hosted GitHub repos.","code":""},{"path":"https://dieghernan.github.io/resmush/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Optimize and Compress Image Files with reSmush.it","text":"Hernangómez D (2024). resmush: Optimize Compress Image Files reSmush.. https://dieghernan.github.io/resmush/. BibTeX entry LaTeX users ","code":"@Manual{R-resmush,   title = {{resmush}: Optimize and Compress Image Files with {reSmush.it}},   author = {Diego Hernangómez},   year = {2024},   version = {0.0.1},   url = {https://dieghernan.github.io/resmush/},   abstract = {Compress local and online images using the reSmush.it API service <https://resmush.it/>.}, }"},{"path":"https://dieghernan.github.io/resmush/index.html","id":"attributions","dir":"","previous_headings":"","what":"Attributions","title":"Optimize and Compress Image Files with reSmush.it","text":"Logo uses: great wave Kanagawa icons created Freepik - Flaticons Compression icons created MansyGraphics - Flaticon","code":""},{"path":"https://dieghernan.github.io/resmush/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 resmush authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush-package.html","id":null,"dir":"Reference","previous_headings":"","what":"resmush: Optimize and Compress Image Files with 'reSmush.it' — resmush-package","title":"resmush: Optimize and Compress Image Files with 'reSmush.it' — resmush-package","text":"Compress local online images using 'reSmush.' API service https://resmush./.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/resmush/reference/resmush-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"resmush: Optimize and Compress Image Files with 'reSmush.it' — resmush-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_clean_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for cleaning files created by resmush — resmush_clean_dir","title":"Helper function for cleaning files created by resmush — resmush_clean_dir","text":"Use caution. remove files computer. Clean directory (list directories) files created resmush_file().","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_clean_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for cleaning files created by resmush — resmush_clean_dir","text":"","code":"resmush_clean_dir(dir, suffix = \"_resmush\", recursive = FALSE)"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_clean_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for cleaning files created by resmush — resmush_clean_dir","text":"dir character vector full path names. See list.files(), path argument. suffix Character, defaults \"_resmush\". See resmush_file(). recursive Logical. files deleted recurse directories?","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_clean_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for cleaning files created by resmush — resmush_clean_dir","text":"0 success, 1 failure, invisibly. See unlink().","code":""},{"path":[]},{"path":"https://dieghernan.github.io/resmush/reference/resmush_clean_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for cleaning files created by resmush — resmush_clean_dir","text":"","code":"# Simple example  png_file <- system.file(\"extimg/example.png\", package = \"resmush\")   # Copy to a temporary file with a given suffix suffix <- \"_would_be_removed\" tmp_png <- file.path(   tempdir(),   paste0(\"example\", suffix, \".png\") )  file.exists(tmp_png) #> [1] FALSE file.copy(png_file, tmp_png, overwrite = TRUE) #> [1] TRUE  file.exists(tmp_png) #> [1] TRUE  # This won't remove it resmush_clean_dir(tempdir())  file.exists(tmp_png) #> [1] TRUE  # Need suffix resmush_clean_dir(tempdir(), suffix = suffix)  file.exists(tmp_png) #> [1] FALSE"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize files of several directories — resmush_dir","title":"Optimize files of several directories — resmush_dir","text":"Optimize local files directory (list directories) using  reSmush.API.","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize files of several directories — resmush_dir","text":"","code":"resmush_dir(   dir,   ext = \"\\\\.(png|jpe?g|bmp|gif|tif|webp)$\",   suffix = \"_resmush\",   verbose = FALSE,   ... )"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize files of several directories — resmush_dir","text":"dir Character vector characters representing paths local directories. ext regex indicating extensions files optimized. default value capture extensions admitted API. suffix Character, defaults \"_resmush\". default, new file suffix created directory (.e., optimized example.png example_resmush.png). Use \"\", NA NULL overwrite files. verbose Logical. TRUE displays summary results. ... Arguments passed resmush_file qlty affects jpg files. Integer 0 100 indicating optimization level. optimal results use vales 90. exif_preserve Logical. Exif information () deleted? Default remove (.e. exif_preserve = FALSE).","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize files of several directories — resmush_dir","text":"Writes disk optimized file API call successful directories specified dir. case, (invisibly) data frame summary process returned well.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/resmush/reference/resmush_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize files of several directories — resmush_dir","text":"","code":"# \\donttest{ # Get example files and copy to a temporary dir example_files <- list.files(system.file(package = \"resmush\"),   pattern = \"\\\\.(png|jpe?g)$\",   recursive = TRUE,   full.names = TRUE )  temp_dir <- file.path(tempdir(), \"example_dir\") if (!dir.exists(temp_dir)) dir.create(temp_dir) file.copy(example_files, temp_dir) #> [1] TRUE TRUE TRUE TRUE TRUE  resmush_dir(temp_dir, verbose = TRUE) #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/example.jpg: #> ℹ Effective compression ratio: 17.2% #> ℹ Current size: 83.2 Kb (was 100.4 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/example_resmush.jpg #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/example.png: #> ℹ Effective compression ratio: 70.5% #> ℹ Current size: 70.7 Kb (was 239.9 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/example_resmush.png #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/jpg_example_compress.jpg: #> ℹ Effective compression ratio: 0.3% #> ℹ Current size: 44.3 Kb (was 44.4 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/jpg_example_compress_resmush.jpg #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/jpg_example_compress_low.jpg: #> ℹ Effective compression ratio: 0.0% #> ℹ Current size: 5.6 Kb (was 5.6 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/jpg_example_compress_low_resmush.jpg #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/logo.png: #> ℹ Effective compression ratio: 0.0% #> ℹ Current size: 66.8 Kb (was 66.8 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq/example_dir/logo_resmush.png  # Clean up unlink(temp_dir, force = TRUE) # }"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize a local file — resmush_file","title":"Optimize a local file — resmush_file","text":"Optimize local images using reSmush.API.","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize a local file — resmush_file","text":"","code":"resmush_file(   file,   suffix = \"_resmush\",   qlty = 92,   verbose = FALSE,   exif_preserve = FALSE )"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize a local file — resmush_file","text":"file Path paths local files. reSmush can optimize following image files: png jpg/jpeg gif bmp tiff webp suffix Character, defaults \"_resmush\". default, new file suffix created directory file. (.e., optimized example.png example_resmush.png). Use \"\", NA NULL overwrite initial file. file use following values: \"\", NA, NULL. qlty affects jpg files. Integer 0 100 indicating optimization level. optimal results use vales 90. verbose Logical. TRUE displays summary results. exif_preserve Logical. Exif information () deleted? Default remove (.e. exif_preserve = FALSE).","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize a local file — resmush_file","text":"Writes disk optimized file API call successful directory file. case, (invisibly) data frame summary process returned well.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/resmush/reference/resmush_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize a local file — resmush_file","text":"","code":"# \\donttest{ png_file <- system.file(\"extimg/example.png\", package = \"resmush\")  # For the example, copy to a temporary file tmp_png <- tempfile(fileext = \".png\")  file.copy(png_file, tmp_png, overwrite = TRUE) #> [1] TRUE  resmush_file(tmp_png)  # Several paths jpg_file <- system.file(\"extimg/example.jpg\", package = \"resmush\") tmp_jpg <- tempfile(fileext = \".jpg\")  file.copy(jpg_file, tmp_jpg, overwrite = TRUE) #> [1] TRUE  summary <- resmush_file(c(tmp_png, tmp_jpg))  # Returns an (invisible) data frame with a summary of the process summary #>                                                                      src_img #> 1 C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\Rtmpae8Wsq\\\\filef084d9a1c49.png #> 2 C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\Rtmpae8Wsq\\\\filef0849926528.jpg #>                                                                             dest_img #> 1 C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\Rtmpae8Wsq\\\\filef084d9a1c49_resmush.png #> 2 C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\Rtmpae8Wsq\\\\filef0849926528_resmush.jpg #>   src_size dest_size compress_ratio notes #> 1 239.9 Kb   70.7 Kb          70.5% OK ;) #> 2 100.4 Kb   83.2 Kb          17.2% OK ;)   # With parameters  # Silently returns a data frame resmush_file(tmp_jpg, verbose = TRUE) #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq\\filef0849926528.jpg: #> ℹ Effective compression ratio: 17.2% #> ℹ Current size: 83.2 Kb (was 100.4 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq\\filef0849926528_resmush.jpg resmush_file(tmp_jpg, verbose = TRUE, qlty = 10) #> ✔ Optimizing C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq\\filef0849926528.jpg: #> ℹ Effective compression ratio: 93.6% #> ℹ Current size: 6.4 Kb (was 100.4 Kb) #> ℹ Output: #>   C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\Rtmpae8Wsq\\filef0849926528_resmush.jpg # }"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize an online file — resmush_url","title":"Optimize an online file — resmush_url","text":"Optimize download online image using reSmush.API.","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize an online file — resmush_url","text":"","code":"resmush_url(   url,   outfile = file.path(tempdir(), basename(url)),   qlty = 92,   verbose = FALSE,   exif_preserve = FALSE )"},{"path":"https://dieghernan.github.io/resmush/reference/resmush_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize an online file — resmush_url","text":"url url vector urls pointing hosted image files. reSmush can optimize following image files: png jpg/jpeg gif bmp tiff webp outfile Path paths optimized files store disk. default, temporary files (see tempfile()) basename() file provided url created. length url parameter. qlty affects jpg files. Integer 0 100 indicating optimization level. optimal results use vales 90. verbose Logical. TRUE displays summary results. exif_preserve Logical. Exif information () deleted? Default remove (.e. exif_preserve = FALSE).","code":""},{"path":"https://dieghernan.github.io/resmush/reference/resmush_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize an online file — resmush_url","text":"Writes disk optimized file API call successful. case, (invisibly) data frame summary process returned well. value vector outfile duplicated, resmush_url() rename output suffix _1. _2, etc.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/resmush/reference/resmush_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize an online file — resmush_url","text":"","code":"# \\donttest{  # Base url base_url <- \"https://raw.githubusercontent.com/dieghernan/resmush/main/inst/\"  png_url <- paste0(base_url, \"/extimg/example.png\") resmush_url(png_url)  # Several urls jpg_url <- paste0(base_url, \"/extimg/example.jpg\")   summary <- resmush_url(c(png_url, jpg_url))  # Returns an (invisible) data frame with a summary of the process summary #>                                                                              src_img #> 1 https://raw.githubusercontent.com/dieghernan/resmush/main/inst//extimg/example.png #> 2 https://raw.githubusercontent.com/dieghernan/resmush/main/inst//extimg/example.jpg #>                                                      dest_img src_size #> 1 C:/Users/RUNNER~1/AppData/Local/Temp/Rtmpae8Wsq/example.png 239.9 Kb #> 2 C:/Users/RUNNER~1/AppData/Local/Temp/Rtmpae8Wsq/example.jpg 100.4 Kb #>   dest_size compress_ratio notes #> 1   70.7 Kb          70.5% OK ;) #> 2   83.2 Kb          17.2% OK ;)  # Use with jpg and parameters resmush_url(jpg_url, verbose = TRUE) #> ✔ Optimizing https://raw.githubusercontent.com/dieghernan/resmush/main/inst//extimg/example.jpg: #> ℹ Effective compression ratio: 17.2% #> ℹ Current size: 83.2 Kb (was 100.4 Kb) #> ℹ Output: C:/Users/RUNNER~1/AppData/Local/Temp/Rtmpae8Wsq/example.jpg resmush_url(jpg_url, verbose = TRUE, qlty = 10) #> ✔ Optimizing https://raw.githubusercontent.com/dieghernan/resmush/main/inst//extimg/example.jpg: #> ℹ Effective compression ratio: 93.6% #> ℹ Current size: 6.4 Kb (was 100.4 Kb) #> ℹ Output: C:/Users/RUNNER~1/AppData/Local/Temp/Rtmpae8Wsq/example.jpg # }"},{"path":"https://dieghernan.github.io/resmush/news/index.html","id":"resmush-001","dir":"Changelog","previous_headings":"","what":"resmush 0.0.1","title":"resmush 0.0.1","text":"Initial version","code":""}]
